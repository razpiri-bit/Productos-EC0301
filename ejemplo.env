# ============================================
# VARIABLES DE ENTORNO - SkillsCert EC0301
# ============================================
# 
# INSTRUCCIONES:
# 1. Copia estas variables a Render.com
# 2. Ve a tu proyecto ‚Üí Environment ‚Üí Add Environment Variable
# 3. Pega cada variable con su valor correspondiente
# 4. NO incluyas comillas en los valores
# 5. Guarda y reinicia el servicio
#
# ============================================

# ============================================
# üîê STRIPE (PAGOS)
# ============================================

# Clave secreta de Stripe (Dashboard ‚Üí API Keys)
# Modo TEST: sk_test_xxx...
# Modo PRODUCCI√ìN: sk_live_xxx...
STRIPE_SECRET_KEY=sk_test_51XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# Secret del Webhook (Dashboard ‚Üí Webhooks ‚Üí Signing secret)
# Este es CR√çTICO - sin esto el webhook NO funcionar√°
# Formato: whsec_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
STRIPE_WEBHOOK_SECRET=whsec_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# ============================================
# üóÑÔ∏è MYSQL / BASE DE DATOS
# ============================================

# Host de la base de datos
DB_HOST=auth-db562.hstgr.io

# Puerto (por defecto es 3306)
DB_PORT=3306

# Usuario de la base de datos
DB_USER=u259791740_skillscert

# Contrase√±a de la base de datos
DB_PASSWORD=TU_PASSWORD_AQUI

# Nombre de la base de datos
DB_NAME=u259791740_Azpikillscert

# ============================================
# üìß EMAIL (GMAIL)
# ============================================

# Tu email de Gmail
EMAIL_USER=razpiri@gmail.com

# ‚ö†Ô∏è IMPORTANTE: NO uses tu contrase√±a normal de Gmail
# Debes generar una "App Password" (Contrase√±a de aplicaci√≥n)
# 
# Pasos para obtener App Password:
# 1. Ve a https://myaccount.google.com/security
# 2. Activa "Verificaci√≥n en 2 pasos" si no la tienes
# 3. Busca "Contrase√±as de aplicaciones"
# 4. Selecciona "Correo" y "Otro (nombre personalizado)"
# 5. Escribe "SkillsCert Webhook"
# 6. Google te dar√° una contrase√±a de 16 caracteres
# 7. C√≥piala SIN espacios (ej: abcd efgh ijkl mnop ‚Üí abcdefghijklmnop)
#
EMAIL_PASSWORD=abcdefghijklmnop

# ============================================
# üì± WHATSAPP META CLOUD API
# ============================================

# Token de acceso de Meta Business
# Obtenerlo en: https://developers.facebook.com
# 1. Ve a tu App ‚Üí WhatsApp ‚Üí Configuraci√≥n ‚Üí API
# 2. Genera o copia el "Token de acceso"
# Formato: EAAxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
WHATSAPP_TOKEN=EAAxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# ID del tel√©fono de negocio
# Encontrarlo en: WhatsApp Business Account ‚Üí N√∫meros de tel√©fono
# Formato: 123456789012345 (solo n√∫meros)
WHATSAPP_PHONE_ID=123456789012345

# Token de verificaci√≥n del webhook de WhatsApp
# Puedes usar cualquier string √∫nico (para verificar webhooks)
WHATSAPP_VERIFY_TOKEN=skillscert_webhook_2025

# ============================================
# üìÆ POSTMARK (EMAIL ALTERNATIVO - OPCIONAL)
# ============================================
# Postmark es una alternativa m√°s confiable que Gmail para emails transaccionales
# Si Gmail falla, el sistema intentar√° con Postmark autom√°ticamente
# 
# Para obtener:
# 1. Crea cuenta en https://postmarkapp.com
# 2. Verifica tu dominio
# 3. Ve a Servers ‚Üí API Tokens
# 

# Token del servidor de Postmark (opcional)
# Si no lo usas, d√©jalo comentado o elim√≠nalo
POSTMARK_SERVER_TOKEN=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx

# Email verificado en Postmark para enviar desde (opcional)
# Debe ser un email de tu dominio verificado
POSTMARK_FROM_EMAIL=noreply@skillscert.com.mx

# ============================================
# üöÄ CONFIGURACI√ìN DEL SERVIDOR
# ============================================

# Puerto del servidor (Render lo asigna autom√°ticamente)
# No necesitas cambiarlo
PORT=3000

# ============================================
# üß™ NOTAS PARA DESARROLLO LOCAL
# ============================================
#
# Si quieres probar en tu m√°quina local:
#
# 1. Crea un archivo .env en la ra√≠z del proyecto
# 2. Copia estas variables
# 3. Llena los valores reales
# 4. Ejecuta: npm install
# 5. Ejecuta: npm start
# 6. El servidor correr√° en http://localhost:3000
#
# Para probar el webhook localmente necesitas usar ngrok:
# 1. Instala ngrok: https://ngrok.com
# 2. Ejecuta: ngrok http 3000
# 3. Usa la URL de ngrok en Stripe (ej: https://xxxx.ngrok.io/webhook)
#
# ============================================

# ============================================
# ‚úÖ VERIFICACI√ìN DE CONFIGURACI√ìN
# ============================================
#
# Una vez configurado, verifica que todo funcione:
#
# 1. Health check:
#    https://productos-ec0301-1-0-dwk2.onrender.com/health
#
# 2. Prueba de email:
#    https://productos-ec0301-1-0-dwk2.onrender.com/test-envio?email=test@test.com&nombre=Juan&metodo=email
#
# 3. Prueba de WhatsApp:
#    https://productos-ec0301-1-0-dwk2.onrender.com/test-envio?email=test@test.com&nombre=Juan&telefono=5538822334&metodo=whatsapp
#
# 4. Prueba completa:
#    https://productos-ec0301-1-0-dwk2.onrender.com/test-envio?email=test@test.com&nombre=Juan&telefono=5538822334&metodo=both
#
# ============================================

# ============================================
# üîí SEGURIDAD
# ============================================
#
# ‚ö†Ô∏è IMPORTANTE:
# - NUNCA compartas este archivo .env
# - NO lo subas a GitHub o repositorios p√∫blicos
# - Usa .gitignore para excluirlo
# - Cambia las credenciales si se filtran
# - Usa diferentes credenciales para desarrollo y producci√≥n
#
# ============================================

# ============================================
# üìä MONITOREO
# ============================================
#
# Logs en Render:
# - Ve a tu proyecto ‚Üí Logs
# - Busca mensajes como:
#   ‚úÖ C√≥digo guardado en BD
#   ‚úÖ Email enviado
#   ‚úÖ WhatsApp enviado
#
# Logs en Stripe:
# - Dashboard ‚Üí Webhooks ‚Üí Tu endpoint ‚Üí Logs
# - Verifica respuestas 200 OK
#
# ============================================

# FIN DE CONFIGURACI√ìN
